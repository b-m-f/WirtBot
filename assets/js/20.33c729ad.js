(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{394:function(e,t,n){"use strict";n.r(t);var r=n(45),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"update-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#update-3"}},[e._v("#")]),e._v(" Update 3")]),e._v(" "),n("p",[e._v("Already the third update and some things have changed on the surface, more on that at the "),n("a",{attrs:{href:"#frontend-refactor"}},[e._v("end of the page")]),e._v(".")]),e._v(" "),n("p",[e._v("But underneath the hood, that is where things were really changed.\nSo lets dive right in.")]),e._v(" "),n("h2",{attrs:{id:"single-docker-container"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#single-docker-container"}},[e._v("#")]),e._v(" Single Docker container")]),e._v(" "),n("p",[e._v("First of all, the functionality that ensures the systems functionality is now encapsulated inside a single Docker container.\nThe only exception is CoreDNS. It still resides in its own container and only the "),n("strong",[e._v("Corefile")]),e._v(" is shared via Docker volumes over the local filesystem.")]),e._v(" "),n("p",[e._v("The single WirtBot Container uses "),n("a",{attrs:{href:"https://github.com/just-containers/s6-overlay",target:"_blank",rel:"noopener noreferrer"}},[e._v("s6-overlay"),n("OutboundLink")],1),e._v(" for managing the different processes - Nginx for Interface, Core, File watcher to reload interface. All logic is encapsulated in this container, which on the other hand means that it has to be started with "),n("strong",[e._v("NET_CAP")]),e._v(" capabilities to control the WireGuard Interface on the host.\nOn the other hand it simplifies setup. No more SystemD service configurations.")]),e._v(" "),n("p",[e._v("Whether or not this is a good idea in the long term? Lets see.")]),e._v(" "),n("h3",{attrs:{id:"long-standing-issue-addressed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#long-standing-issue-addressed"}},[e._v("#")]),e._v(" Long standing issue addressed")]),e._v(" "),n("p",[e._v("More thans 6 months ago when I posted about WirtBot on "),n("a",{attrs:{href:"https://reddit.com/r/homelab",target:"_blank",rel:"noopener noreferrer"}},[e._v("/r/homelab"),n("OutboundLink")],1),e._v(" a reddit user gave some "),n("a",{attrs:{href:"https://www.reddit.com/r/homelab/comments/ge0vdf/make_your_homelab_available_over_the_internet/fpmbw2c?utm_source=share&utm_medium=web2x&context=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("critique on how the interface is reloaded on every change"),n("OutboundLink")],1),e._v(".\nThis issue is now addressed in the code, following this relevant section from the man pages of "),n("strong",[e._v("wg-quick")]),e._v(":")]),e._v(" "),n("blockquote",[n("p",[e._v("The strip command is useful for reloading configuration  files  without\ndisrupting active sessions:")])]),e._v(" "),n("blockquote",[n("h1",{attrs:{id:"wg-syncconf-wgnet0-wg-quick-strip-wgnet0"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wg-syncconf-wgnet0-wg-quick-strip-wgnet0"}},[e._v("#")]),e._v(" wg syncconf wgnet0 <(wg-quick strip wgnet0)")])]),e._v(" "),n("h2",{attrs:{id:"repo-reoganization"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#repo-reoganization"}},[e._v("#")]),e._v(" Repo Reoganization")]),e._v(" "),n("p",[e._v("Some maintenance work on the repository:")]),e._v(" "),n("ul",[n("li",[e._v("All things build-automation and containerization are now in the "),n("code",[e._v("Build-Automation")]),e._v(" directory")]),e._v(" "),n("li",[e._v("Modules now have a README.md")])]),e._v(" "),n("h2",{attrs:{id:"testing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#testing"}},[e._v("#")]),e._v(" Testing")]),e._v(" "),n("p",[e._v("This is probabaly the biggest chunk of work.")]),e._v(" "),n("p",[e._v("To support changes in the future and ensure that the whole system still works as intended a whole bunch of tests were added and rewritten.")]),e._v(" "),n("ul",[n("li",[e._v("The installer is now tested to supply correct values to ansible")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://playwright.dev/",target:"_blank",rel:"noopener noreferrer"}},[e._v("playwright"),n("OutboundLink")],1),e._v(" supersedes "),n("a",{attrs:{href:"https://nightwatchjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("nightwatch"),n("OutboundLink")],1),e._v(" for End2End tests")]),e._v(" "),n("li",[e._v("Input validity now tested")]),e._v(" "),n("li",[e._v("Backup export and import tested")]),e._v(" "),n("li",[e._v("Correct IPv6 configuration tested")]),e._v(" "),n("li",[e._v("Test complex and simple network configurations")]),e._v(" "),n("li",[e._v("Tests run in Firefox AND Chromium in CI")])]),e._v(" "),n("h2",{attrs:{id:"frontend-refactor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#frontend-refactor"}},[e._v("#")]),e._v(" Frontend refactor")]),e._v(" "),n("p",[e._v("Based on the improved testing I was able to refactor the frontend with confidence.\nSo what changed?")]),e._v(" "),n("p",[e._v("Things were removed! "),n("strong",[e._v("Less complexity, more focus")]),e._v(".")]),e._v(" "),n("p",[e._v("And here a list of the removed features:")]),e._v(" "),n("ul",[n("li",[e._v("Expert mode - All configuration options are shown by default")]),e._v(" "),n("li",[e._v("Edit mode - Changes, as long as valid, are saved and sent to the backend immediately")]),e._v(" "),n("li",[e._v("Update the UI button - That was a workaround for a bug in the reactivity system. The underlying issue is fixed and this button now unnecessary.")])]),e._v(" "),n("p",[e._v("Besides that some Bugs were squashed in the process of testing and refactoring.")]),e._v(" "),n("h2",{attrs:{id:"end"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#end"}},[e._v("#")]),e._v(" End")]),e._v(" "),n("p",[e._v("Quite a lot of changes that hopefully ensure good maintainability and easier implementation of new features.")]),e._v(" "),n("p",[e._v("Lets see in Update #4. Thanks for reading.")])])}),[],!1,null,null,null);t.default=a.exports}}]);